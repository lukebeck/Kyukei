{"version":3,"sources":["lib/shuffle.js","styles/Button.js","styles/Container.js","Options.js","Results.js","App.js","index.js"],"names":["shuffle","array","t","i","m","length","Math","floor","random","Button","styled","button","_templateObject","props","theme","bg","fg","main","Container","div","Container_templateObject","Options","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","bind","assertThisInitialized","value","onSubmit","_this2","react_default","a","createElement","styles_Container","options","map","option","Options_Option","key","id","onClick","Component","Option","_this3","handleClick","state","class","className","setState","styles_Button","children","Info","Results_templateObject","Results","answer","setTest","data","choices","slice","question","answers","choice","quiz","GlobalStyle","createGlobalStyle","App_templateObject","Main","_templateObject2","Card","_templateObject3","Hana","_templateObject4","App","handleReplaySubmit","test","response","flipped","e","styled_components_browser_esm","App_Back","results","App_Front","Front","Options_Options","Back","role","aria-label","Results_Results","ReactDOM","render","src_App","document","getElementById"],"mappings":"wuBAqBeA,EAnBC,SAACC,GAKb,IAHA,IAAsBC,EAAGC,EAArBC,EAAIH,EAAMI,OAGPD,GAGHD,EAAIG,KAAKC,MAAMD,KAAKE,SAAWJ,KAG/BF,EAAID,EAAMG,GACVH,EAAMG,GAAKH,EAAME,GACjBF,EAAME,GAAKD,EAGf,OAAOD,kjBChBX,IA2BeQ,EA3BAC,IAAOC,OAAVC,IAEM,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,IAC1B,SAAAF,GAAK,OAAIA,EAAMC,MAAME,IAKb,SAAAH,GAAK,OAAIA,EAAMC,MAAME,IAarB,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,MACb,SAAAJ,GAAK,OAAIA,EAAMC,MAAMG,gLCtBlD,IAOeC,EAPGR,IAAOS,IAAVC,KCEMC,cACjB,SAAAA,EAAYR,GAAO,IAAAS,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACfC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMZ,KACDgB,aAAeP,EAAKO,aAAaC,KAAlBP,OAAAQ,EAAA,EAAAR,CAAAD,IAFLA,4EAKNU,GACTP,KAAKZ,MAAMoB,SAASD,oCAGf,IAAAE,EAAAT,KACL,OACIU,EAAAC,EAAAC,cAACC,EAAD,KACKb,KAAKZ,MAAM0B,QAAQC,IAChB,SAACC,GAAD,OAAYN,EAAAC,EAAAC,cAACK,EAAD,CACRC,IAAKF,EACLG,GAAIH,EACJI,QAAS,kBAAMX,EAAKL,aAAaY,KAC7BA,aAlBSK,aA0B/BC,cACF,SAAAA,EAAYlC,GAAM,IAAAmC,EAAA,OAAAzB,OAAAC,EAAA,EAAAD,CAAAE,KAAAsB,IACdC,EAAAzB,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwB,GAAAnB,KAAAH,KAAMZ,KACDoC,YAAcD,EAAKC,YAAYnB,KAAjBP,OAAAQ,EAAA,EAAAR,CAAAyB,IACnBA,EAAKE,MAAQ,CACTC,MAAOH,EAAKnC,MAAMuC,WAJRJ,2EASNhB,GACRP,KAAK4B,SAAS,CAAEF,MAAO,cACvB1B,KAAKZ,MAAMgC,2CAIX,OACIV,EAAAC,EAAAC,cAACiB,EAAD,CACIT,QAASpB,KAAKwB,YACdG,UAAW3B,KAAKyB,MAAMC,OAErB1B,KAAKZ,MAAM0C,iBArBPT,kSCzBrB,IAAMU,EAAO9C,IAAOS,IAAVsC,KAeWC,cACjB,SAAAA,EAAY7C,GAAO,IAAAS,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiC,IACfpC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmC,GAAA9B,KAAAH,KAAMZ,KACDgB,aAAeP,EAAKO,aAAaC,KAAlBP,OAAAQ,EAAA,EAAAR,CAAAD,IAFLA,4EAKNU,GACTP,KAAKZ,MAAMoB,SAASD,oCAKpB,OACIG,EAAAC,EAAAC,cAACC,EAAD,KACIH,EAAAC,EAAAC,cAACmB,EAAD,KACIrB,EAAAC,EAAAC,cAAA,SACKZ,KAAKZ,MAAM8C,SAGpBxB,EAAAC,EAAAC,cAACiB,EAAD,CAAQT,QAASpB,KAAKI,cAAtB,oBAnBqBiB,+qCCbrC,IAAMc,EAAU,SAAAC,GACd,IAAIC,EAAU9D,EAAQ6D,GAAME,MAAM,EAAG,GAGrC,MAAO,CAAEC,SAFMF,EAAQ,GAEMG,QADfjE,EAAQ8D,GAAStB,IAAI,SAAA0B,GAAM,OAAIA,EAAOP,WAIhDQ,EAAOP,EAAQC,GAEf/C,EAAQ,CACZC,GAAI,OACJC,GAAI,gBACJC,KAAM,QAsBFmD,EAAcC,YAAHC,IAOD,SAAAzD,GAAK,OAAIA,EAAMC,MAAMG,OAsB/BsD,EAAO7D,IAAOS,IAAVqD,KAMJC,EAAO/D,IAAOS,IAAVuD,IACY,SAAA7D,GAAK,OAAIA,EAAMC,MAAMC,IAChC,SAAAF,GAAK,OAAIA,EAAMC,MAAME,IAMV,SAAAH,GAAK,OAAIA,EAAMC,MAAME,KAMrC2D,EAAOjE,IAAOS,IAAVyD,KAOJC,cACJ,SAAAA,EAAYhE,GAAO,IAAAS,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoD,IACjBvD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsD,GAAAjD,KAAAH,KAAMZ,KACDgB,aAAeP,EAAKO,aAAaC,KAAlBP,OAAAQ,EAAA,EAAAR,CAAAD,IACpBA,EAAKwD,mBAAqBxD,EAAKwD,mBAAmBhD,KAAxBP,OAAAQ,EAAA,EAAAR,CAAAD,IAC1BA,EAAK4B,MAAQ,CACX6B,KAAMZ,EAAKH,SACXC,QAASE,EAAKF,QACde,SAAU,GACVC,SAAS,GARM3D,4EAYNU,GACXP,KAAKyB,MAAM6B,KAAKpB,SAAW3B,GACzBP,KAAK4B,SAAS,CAAEM,OAAQ3B,EAAOiD,SAAS,+CAGzBC,GACjB,IAAIf,EAAOP,EAAQC,GACnBpC,KAAK4B,SAAS,CACZ0B,KAAMZ,EAAKH,SACXC,QAASE,EAAKF,QACde,SAAU,GACVC,SAAS,qCAKX,IAAMA,EAAUxD,KAAKyB,MAAM+B,QAC3B,OACE9C,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAerE,MAAOA,GACpBqB,EAAAC,EAAAC,cAACkC,EAAD,KACEpC,EAAAC,EAAAC,cAAC+B,EAAD,MACEa,EAQA9C,EAAAC,EAAAC,cAAC+C,EAAD,CACEpB,SAAUvC,KAAKyB,MAAM6B,KAAKf,SAC1BL,OAAQlC,KAAKyB,MAAM6B,KAAKpB,OACxB0B,QAAS5D,KAAKyB,MAAMS,OACpB1B,SAAUR,KAAKqD,qBAXjB3C,EAAAC,EAAAC,cAACiD,EAAD,CACEtB,SAAUvC,KAAKyB,MAAM6B,KAAKf,SAC1BzB,QAASd,KAAKyB,MAAMe,QACpBN,OAAQlC,KAAKyB,MAAM6B,KAAKpB,OACxB1B,SAAUR,KAAKI,wBAvCXiB,aAuDZyC,EAAQ,SAAA1E,GAAK,OACjBsB,EAAAC,EAAAC,cAACoC,EAAD,KACEtC,EAAAC,EAAAC,cAAA,UAAKxB,EAAMmD,UACX7B,EAAAC,EAAAC,cAACmD,EAAD,CACEjD,QAAS1B,EAAM0B,QACfoB,OAAQ9C,EAAM8C,OACd1B,SAAUpB,EAAMoB,aAKhBwD,EAAO,SAAA5E,GAAK,OAChBsB,EAAAC,EAAAC,cAACoC,EAAD,KACEtC,EAAAC,EAAAC,cAACsC,EAAD,KACExC,EAAAC,EAAAC,cAAA,QAAMqD,KAAK,MAAMC,aAAW,gBAA5B,iBAIFxD,EAAAC,EAAAC,cAAA,UAAKxB,EAAMmD,UACX7B,EAAAC,EAAAC,cAACuD,EAAD,CACEjC,OAAQ9C,EAAM8C,OACd0B,QAASxE,EAAMwE,QAAQ1B,OACvB1B,SAAUpB,EAAMoB,aAKP4C,IC9KfgB,IAASC,OAAO3D,EAAAC,EAAAC,cAAC0D,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.3669deb7.chunk.js","sourcesContent":["// Taken from https://bost.ocks.org/mike/shuffle/\n\nconst shuffle = (array) => {\n    \n    var m = array.length, t, i;\n\n    // While there remain elements to shuffle…\n    while (m) {\n\n        // Pick a remaining element…\n        i = Math.floor(Math.random() * m--);\n\n        // And swap it with the current element.\n        t = array[m];\n        array[m] = array[i];\n        array[i] = t;\n    }\n\n    return array;\n}\n\nexport default shuffle;","import styled from 'styled-components';\n\nconst Button = styled.button`\n\n    background: ${props => props.theme.bg};\n    color: ${props => props.theme.fg};\n    font-size: 20px;\n    font-style: italic;\n    font-weight: 400;\n    border: none;\n    border-bottom: ${props => props.theme.fg} solid 3px;\n    padding: 10px;\n    margin: 10px;\n    width: 120px;\n    flex: none;\n    display: flex;\n    justify-content: center;\n    :focus {outline:0;}\n    :visited{\n          color: black;\n    }\n    @media (hover) {\n        :hover {\n            color: ${props => props.theme.main};\n            border-bottom: ${props => props.theme.main} solid 3px;\n        }\n    }\n`;\n\nexport default Button;","import styled from 'styled-components';\n\nconst Container = styled.div`\n    height: 150px;\n    display: flex;\n    justify-content: space-evenly;\n    flex-wrap: wrap;\n`;\n\nexport default Container;","import React, { Component } from 'react';\nimport Button from './styles/Button';\nimport Container from './styles/Container';\n\nexport default class Options extends Component {\n    constructor(props) {\n        super(props)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleSubmit(value) {\n        this.props.onSubmit(value)\n    }\n\n    render() {\n        return (\n            <Container>\n                {this.props.options.map(\n                    (option) => <Option\n                        key={option}\n                        id={option}\n                        onClick={() => this.handleSubmit(option)}>{\n                            option}\n                    </Option>\n                )}\n            </Container>\n        )\n    }\n};\n\nclass Option extends Component {\n    constructor(props){\n        super(props)\n        this.handleClick = this.handleClick.bind(this)\n        this.state = {\n            class: this.props.className\n\n        }\n    }\n\n    handleClick(value){\n        this.setState({ class: \"incorrect\"});\n        this.props.onClick()\n    }\n\n    render(){\n        return(\n            <Button\n                onClick={this.handleClick}\n                className={this.state.class}\n                >\n                {this.props.children}\n            </Button>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Button from './styles/Button';\nimport Container from './styles/Container'\n\nconst Info = styled.div`\n  width: 220px;\n  text-align: left;\n  margin-top: 0;\n  font-size: 50px;\n  display: flex;\n  justify-content: center;\n  p {\n      margin: 0;\n      font-style: italic;\n      font-weight: 400;\n  }\n\n`;\n\nexport default class Results extends Component {\n    constructor(props) {\n        super(props)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleSubmit(value) {\n        this.props.onSubmit(value)\n    }\n\n\n    render() {\n        return (\n            <Container>\n                <Info>\n                    <p>\n                        {this.props.answer}\n                    </p>\n                </Info>                \n                <Button onClick={this.handleSubmit}>Go again</Button>\n            </Container>\n        )\n    }\n};\n","import React, { Component } from \"react\";\nimport styled, { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport data from \"./lib/data1.json\";\nimport shuffle from \"./lib/shuffle\";\nimport Options from \"./Options\";\nimport Results from \"./Results\";\n\nconst setTest = data => {\n  let choices = shuffle(data).slice(0, 4);\n  let question = choices[0];\n  let answers = shuffle(choices).map(choice => choice.answer);\n  return { question: question, answers: answers };\n};\n\nconst quiz = setTest(data);\n\nconst theme = {\n  bg: \"#fff\",\n  fg: \"rgb(10,10,10)\",\n  main: \"pink\"\n};\n\n// const invertTheme = ({ fg, bg }) => ({\n//   fg: bg,\n//   bg: fg,\n//   main: \"pink\"\n// });\n\n// For cross-browser consistency could use Twemoji (https://twemoji.twitter.com/)\n// Noto emoji from google is also an option\n// import hana from './lib/hana.svg';\n// const Emoji = styled.img`\n//   position: absolute;\n//   display: block;\n//   height:10vmin;\n//   font-size: 10px;\n//   margin: 0 20px;\n//   transform: rotate(330deg);\n// `;\n// <Emoji src={hana} alt=\"white-flower emoji\" />\n\nconst GlobalStyle = createGlobalStyle`\nbody {\n  margin: 0;\n  padding: 0;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n    sans-serif;\n  background: ${props => props.theme.main};\n  .incorrect {\n    color: #eee;\n    border-bottom: 3px solid #eee;\n    :hover{\n      color: #eee;\n      border-bottom: 3px solid #eee;\n    }\n  }\n};\n\nh1 {\n  font-size: 100px;\n  margin: 3rem;\n}\n\n.fail {\n  color: pink;\n  border-bottom: pink solid 3px;\n}\n`;\n\nconst Main = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 10px;\n`;\n\nconst Card = styled.div`\n  background-color: ${props => props.theme.bg};\n  color: ${props => props.theme.fg};\n  flex: none;\n  height: 350px;\n  width: 300px;\n  margin-top: 100px;\n  padding: 30px 0;\n  border: solid 1px ${props => props.theme.fg};\n  border-radius: 30px;\n  box-shadow: 3px 3px rgb(30, 30, 30);\n  text-align: center;\n`;\n\nconst Hana = styled.div`\n  position: absolute;\n  font-size: 60px;\n  margin: 0 30px;\n  transform: rotate(330deg);\n`;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleReplaySubmit = this.handleReplaySubmit.bind(this);\n    this.state = {\n      test: quiz.question,\n      answers: quiz.answers,\n      response: \"\",\n      flipped: false\n    };\n  }\n\n  handleSubmit(value) {\n    this.state.test.answer === value &&\n      this.setState({ answer: value, flipped: true });\n  }\n\n  handleReplaySubmit(e) {\n    let quiz = setTest(data);\n    this.setState({\n      test: quiz.question,\n      answers: quiz.answers,\n      response: \"\",\n      flipped: false\n    });\n  }\n\n  render() {\n    const flipped = this.state.flipped;\n    return (\n      <ThemeProvider theme={theme}>\n        <Main>\n          <GlobalStyle />\n          {!flipped ? (\n            <Front\n              question={this.state.test.question}\n              options={this.state.answers}\n              answer={this.state.test.answer}\n              onSubmit={this.handleSubmit}\n            />\n          ) : (\n            <Back\n              question={this.state.test.question}\n              answer={this.state.test.answer}\n              results={this.state.answer}\n              onSubmit={this.handleReplaySubmit}\n            />\n          )}\n        </Main>\n      </ThemeProvider>\n    );\n  }\n}\n\nconst Front = props => (\n  <Card>\n    <h1>{props.question}</h1>\n    <Options\n      options={props.options}\n      answer={props.answer}\n      onSubmit={props.onSubmit}\n    />\n  </Card>\n);\n\nconst Back = props => (\n  <Card>\n    <Hana>\n      <span role=\"img\" aria-label=\"white-flower\">\n        💮\n      </span>\n    </Hana>\n    <h1>{props.question}</h1>\n    <Results\n      answer={props.answer}\n      results={props.results.answer}\n      onSubmit={props.onSubmit}\n    />\n  </Card>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}