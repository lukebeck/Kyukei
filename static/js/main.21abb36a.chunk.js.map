{"version":3,"sources":["lib/shuffle.js","styles/Button.js","styles/Container.js","Options.js","Results.js","App.js","index.js"],"names":["shuffle","array","t","i","m","length","Math","floor","random","Button","styled","button","_templateObject","props","theme","bg","fg","main","Container","div","Container_templateObject","Options","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","bind","assertThisInitialized","value","onSubmit","_this2","react_default","a","createElement","styles_Container","options","map","option","styles_Button","key","id","onClick","Component","Info","Results_templateObject","Results","answer","setTest","data","choices","slice","question","answers","choice","quiz","GlobalStyle","createGlobalStyle","App_templateObject","Main","_templateObject2","Card","_templateObject3","Hana","_templateObject4","App","handleReplaySubmit","state","test","response","flipped","setState","document","getElementById","className","e","styled_components_browser_esm","react","role","aria-label","Results_Results","results","Options_Options","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.21abb36a.chunk.js","sourcesContent":["// Taken from https://bost.ocks.org/mike/shuffle/\n\nconst shuffle = (array) => {\n    \n    var m = array.length, t, i;\n\n    // While there remain elements to shuffle…\n    while (m) {\n\n        // Pick a remaining element…\n        i = Math.floor(Math.random() * m--);\n\n        // And swap it with the current element.\n        t = array[m];\n        array[m] = array[i];\n        array[i] = t;\n    }\n\n    return array;\n}\n\nexport default shuffle;","import styled from 'styled-components';\n\nconst Button = styled.button`\n    background: ${props => props.theme.bg};\n    color: ${props => props.theme.fg};\n    font-size: 20px;\n    font-style: italic;\n    font-weight: 400;\n    border: none;\n    border-bottom: ${props => props.theme.fg} solid 3px;\n    padding: 10px;\n    margin: 10px;\n    width: 120px;\n    flex: none;\n    display: flex;\n    justify-content: center;\n    :visited{\n          color: black;\n    }\n    @media (hover) {\n    :hover {\n        color: ${props => props.theme.main};\n        border-bottom: ${props => props.theme.main} solid 3px;\n        outline: 0;\n    }\n    }\n`;\n\nexport default Button;","import styled from 'styled-components';\n\nconst Container = styled.div`\n    height: 150px;\n    display: flex;\n    justify-content: space-evenly;\n    flex-wrap: wrap;\n`;\n\nexport default Container;","import React, { Component } from 'react';\nimport Button from './styles/Button';\nimport Container from './styles/Container';\n\nexport default class Options extends Component {\n    constructor(props) {\n        super(props)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleSubmit(value) {\n        this.props.onSubmit(value)\n    }\n\n    render() {\n        return (\n            <Container>\n                {this.props.options.map(\n                    (option) => <Button\n                        key={option}\n                        id={option}\n                        onClick={() => this.handleSubmit(option)}>{\n                            option}\n                    </Button>\n                )}\n            </Container>\n        )\n    }\n};\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Button from './styles/Button';\nimport Container from './styles/Container'\n\nconst Info = styled.div`\n  width: 220px;\n  text-align: left;\n  margin-top: 0;\n  font-size: 50px;\n  display: flex;\n  justify-content: center;\n  p {\n      margin: 0;\n      font-style: italic;\n      font-weight: 400;\n  }\n\n`;\n\nexport default class Results extends Component {\n    constructor(props) {\n        super(props)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleSubmit(value) {\n        this.props.onSubmit(value)\n    }\n\n\n    render() {\n        return (\n            <Container>\n                <Info>\n                    <p>\n                        {this.props.answer}\n                    </p>\n                </Info>                \n                <Button onClick={this.handleSubmit}>Go again</Button>\n            </Container>\n        )\n    }\n};\n","import React, { Component, Fragment } from \"react\";\nimport styled, { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport data from \"./lib/data1.json\";\nimport shuffle from \"./lib/shuffle\";\nimport Options from \"./Options\";\nimport Results from \"./Results\";\n\nconst setTest = data => {\n  let choices = shuffle(data).slice(0, 4);\n  let question = choices[0];\n  let answers = shuffle(choices).map(choice => choice.answer);\n  return { question: question, answers: answers };\n};\n\nconst quiz = setTest(data);\n\nconst theme = {\n  bg: \"#fff\",\n  fg: \"rgb(10,10,10)\",\n  main: \"pink\"\n};\n\n// const invertTheme = ({ fg, bg }) => ({\n//   fg: bg,\n//   bg: fg,\n//   main: \"pink\"\n// });\n\n// For cross-browser consistency could use Twemoji (https://twemoji.twitter.com/)\n// Noto emoji from google is also an option\n// import hana from './lib/hana.svg';\n// const Emoji = styled.img`\n//   position: absolute;\n//   display: block;\n//   height:10vmin;\n//   font-size: 10px;\n//   margin: 0 20px;\n//   transform: rotate(330deg);\n// `;\n// <Emoji src={hana} alt=\"white-flower emoji\" />\n\nconst GlobalStyle = createGlobalStyle`\nbody {\n  margin: 0;\n  padding: 0;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n    sans-serif;\n  background: ${props => props.theme.main};\n};\n\nh1 {\n  font-size: 100px;\n  margin: 3rem;\n}\n\n.fail {\n  color: pink;\n  border-bottom: pink solid 3px;\n}\n`;\n\nconst Main = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 10px;\n`;\n\nconst Card = styled.div`\n  background-color: ${props => props.theme.bg};\n  color: ${props => props.theme.fg};\n  flex: none;\n  height: 350px;\n  width: 300px;\n  margin-top: 100px;\n  padding: 30px 0;\n  border: solid 1px ${props => props.theme.fg};\n  border-radius: 30px;\n  box-shadow: 3px 3px rgb(30, 30, 30);\n  text-align: center;\n`;\n\nconst Hana = styled.div`\n  position: absolute;\n  font-size: 60px;\n  margin: 0 30px;\n  transform: rotate(330deg);\n`;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleReplaySubmit = this.handleReplaySubmit.bind(this);\n    this.state = {\n      test: quiz.question,\n      answers: quiz.answers,\n      response: \"\",\n      flipped: false\n    };\n  }\n\n  handleSubmit(value) {\n    value === this.state.test.answer\n      ? this.setState({ answer: value, flipped: true })\n      : (document.getElementById(value).className += \" fail\")\n  }\n\n  handleReplaySubmit(e) {\n    let quiz = setTest(data);\n    this.setState({\n      test: quiz.question,\n      answers: quiz.answers,\n      response: \"\",\n      flipped: false\n    });\n  }\n\n  render() {\n    const flipped = this.state.flipped;\n    return (\n      <Main>\n        <ThemeProvider theme={theme}>\n          <Fragment>\n            <GlobalStyle />\n            {!flipped ? (\n              <ThemeProvider theme={theme}>\n                {/* theme={invertTheme} */}\n                <Card>\n                  <h1>{this.state.test.question}</h1>\n                  <Options\n                    options={this.state.answers}\n                    onSubmit={this.handleSubmit}\n                  />\n                </Card>\n              </ThemeProvider>\n            ) : (\n              <Card>\n                {this.state.answer === this.state.test.answer && (\n                  <Hana>\n                    <span role=\"img\" aria-label=\"white-flower\">\n                      💮\n                    </span>\n                  </Hana>\n                )}\n                <h1>{this.state.test.question}</h1>\n                <Results\n                  answer={this.state.test.answer}\n                  results={this.state.answer}\n                  onSubmit={this.handleReplaySubmit}\n                />\n              </Card>\n            )}\n          </Fragment>\n        </ThemeProvider>\n      </Main>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}