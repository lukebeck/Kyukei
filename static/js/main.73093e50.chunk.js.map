{"version":3,"sources":["lib/shuffle.js","App.js","index.js"],"names":["shuffle","array","t","i","m","length","Math","floor","random","setTest","data","choices","slice","question","answers","map","choice","answer","quiz","Main","styled","div","_templateObject","Char","h1","_templateObject2","Button","button","_templateObject3","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","bind","assertThisInitialized","handleReplaySubmit","state","test","response","flipped","console","log","concat","value","setState","e","react_default","a","createElement","App_Options","options","onSubmit","onClick","Component","Options","_this2","_this3","option","key","React","ReactDOM","render","src_App","document","getElementById"],"mappings":"sQAqBeA,EAnBC,SAACC,GAKb,IAHA,IAAsBC,EAAGC,EAArBC,EAAIH,EAAMI,OAGPD,GAGHD,EAAIG,KAAKC,MAAMD,KAAKE,SAAWJ,KAG/BF,EAAID,EAAMG,GACVH,EAAMG,GAAKH,EAAME,GACjBF,EAAME,GAAKD,EAGf,OAAOD,yhBCbX,IAAMQ,EAAU,SAACC,GACf,IAAIC,EAAUX,EAAQU,GAAME,MAAM,EAAE,GAGpC,MAAO,CAACC,SAFOF,EAAQ,GAEKG,QADdd,EAAQW,GAASI,IAAI,SAAAC,GAAM,OAAIA,EAAOC,WAIhDC,EAAOT,EAAQC,GAEfS,EAAOC,IAAOC,IAAVC,KAWJC,EAAOH,IAAOI,GAAVC,KAKJC,EAASN,IAAOO,OAAVC,KAONC,cACJ,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAChBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,aAAeP,EAAKO,aAAaC,KAAlBP,OAAAQ,EAAA,EAAAR,CAAAD,IACpBA,EAAKU,mBAAqBV,EAAKU,mBAAmBF,KAAxBP,OAAAQ,EAAA,EAAAR,CAAAD,IAC1BA,EAAKW,MAAQ,CACXC,KAAMzB,EAAKL,SACXC,QAASI,EAAKJ,QACd8B,SAAU,GACVC,SAAS,GAEXC,QAAQC,IAAR,WAAAC,OAAuBjB,EAAKW,MAAMC,KAAK1B,SAVvBc,4EAaLkB,GACXf,KAAKgB,SAAS,CAACjC,OAAQgC,EAAOJ,SAAS,+CAGtBM,GACjB,IAAIjC,EAAOT,EAAQC,GACnBoC,QAAQC,IAAR,WAAAC,OAAuB9B,EAAKL,SAASI,SACrCiB,KAAKgB,SAAS,CACZP,KAAMzB,EAAKL,SACXC,QAASI,EAAKJ,QACd8B,SAAU,GACVC,SAAS,qCAKX,OACEO,EAAAC,EAAAC,cAACnC,EAAD,KACEiC,EAAAC,EAAAC,cAAC/B,EAAD,KAAOW,KAAKQ,MAAMC,KAAK9B,UACvBuC,EAAAC,EAAAC,cAACC,EAAD,CAASC,QAAStB,KAAKQ,MAAM5B,QAAS2C,SAAUvB,KAAKI,eACrDc,EAAAC,EAAAC,cAAC5B,EAAD,CAAQgC,QAASxB,KAAKO,oBAAtB,iBAlCUkB,aAwCZC,cACJ,SAAAA,EAAY9B,GAAO,IAAA+B,EAAA,OAAA7B,OAAAC,EAAA,EAAAD,CAAAE,KAAA0B,IACjBC,EAAA7B,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4B,GAAAvB,KAAAH,KAAMJ,KACDQ,aAAeuB,EAAKvB,aAAaC,KAAlBP,OAAAQ,EAAA,EAAAR,CAAA6B,IAFHA,4EAKNZ,GACXf,KAAKJ,MAAM2B,SAASR,oCAGb,IAAAa,EAAA5B,KACP,OACEkB,EAAAC,EAAAC,cAAA,WACGpB,KAAKJ,MAAM0B,QAAQzC,IAClB,SAACgD,GAAD,OAAYX,EAAAC,EAAAC,cAAC5B,EAAD,CACVsC,IAAKD,EACLL,QAAS,kBAAMI,EAAKxB,aAAayB,KAC/BA,aAjBQE,IAAMN,WA0Bb9B,IClGfqC,IAASC,OAAOf,EAAAC,EAAAC,cAACc,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.73093e50.chunk.js","sourcesContent":["// Taken from https://bost.ocks.org/mike/shuffle/\n\nconst shuffle = (array) => {\n    \n    var m = array.length, t, i;\n\n    // While there remain elements to shuffle…\n    while (m) {\n\n        // Pick a remaining element…\n        i = Math.floor(Math.random() * m--);\n\n        // And swap it with the current element.\n        t = array[m];\n        array[m] = array[i];\n        array[i] = t;\n    }\n\n    return array;\n}\n\nexport default shuffle;","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport data from './lib/data.json'\nimport shuffle from './lib/shuffle'\n\nconst setTest = (data) => {\n  let choices = shuffle(data).slice(0,4)\n  let question = choices[0]\n  let answers = shuffle(choices).map(choice => choice.answer)\n  return {question: question, answers: answers}\n}\n\nconst quiz = setTest(data)\n\nconst Main = styled.div`\n  background: white;\n  margin: 100px 300px;\n  width: 300px;\n  padding: 30px 0;\n  text-align: center;\n  border: solid 1px black;\n  border-radius: 30px;\n  box-shadow: 2px 2px rgb(50,50,50);\n`;\n\nconst Char = styled.h1`\n  font-size: 100px;\n  margin: 3rem;\n`;\n\nconst Button = styled.button`\n  margin: 10px;\n  border: none;\n  border-bottom: black solid 2px;\n  padding: 10px;\n`;\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleReplaySubmit = this.handleReplaySubmit.bind(this)\n    this.state = {\n      test: quiz.question,\n      answers: quiz.answers,\n      response: \"\",\n      flipped: false\n    }\n    console.log(`answer: ${this.state.test.answer}`)\n  }\n\n  handleSubmit(value){\n    this.setState({answer: value, flipped: true})\n  }\n\n  handleReplaySubmit(e){\n    let quiz = setTest(data)\n    console.log(`answer: ${quiz.question.answer}`)\n    this.setState({\n      test: quiz.question,\n      answers: quiz.answers,\n      response: \"\",\n      flipped: false\n    })\n  }\n\n  render() {\n    return (\n      <Main>\n        <Char>{this.state.test.question}</Char>\n        <Options options={this.state.answers} onSubmit={this.handleSubmit}/>\n        <Button onClick={this.handleReplaySubmit}>Reset</Button>        \n      </Main>\n    );\n  }\n}\n\nclass Options extends React.Component {\n  constructor(props) {\n    super(props)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  handleSubmit(value){\n    this.props.onSubmit(value)\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.options.map(\n          (option) => <Button \n            key={option} \n            onClick={() => this.handleSubmit(option)}>{\n              option}\n            </Button>\n          )}\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}