{"version":3,"sources":["lib/shuffle.js","Options.js","Results.js","App.js","index.js"],"names":["shuffle","array","t","i","m","length","Math","floor","random","Container","styled","div","_templateObject","Button","button","_templateObject2","props","theme","bg","fg","main","Options","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","bind","assertThisInitialized","value","onSubmit","_this2","react_default","a","createElement","options","map","option","key","onClick","Component","Results_templateObject","Results_templateObject2","Info","table","_templateObject3","Results","Results_Container","className","answer","results","Results_Button","href","setTest","data","choices","slice","question","answers","choice","quiz","GlobalStyle","createGlobalStyle","App_templateObject","App_templateObject2","Main","App_templateObject3","Hana","_templateObject4","App","handleReplaySubmit","state","test","response","flipped","setState","e","App_Container","styled_components_browser_esm","react","role","aria-label","Results_Results","Options_Options","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.37a7c793.chunk.js","sourcesContent":["// Taken from https://bost.ocks.org/mike/shuffle/\n\nconst shuffle = (array) => {\n    \n    var m = array.length, t, i;\n\n    // While there remain elements to shuffle…\n    while (m) {\n\n        // Pick a remaining element…\n        i = Math.floor(Math.random() * m--);\n\n        // And swap it with the current element.\n        t = array[m];\n        array[m] = array[i];\n        array[i] = t;\n    }\n\n    return array;\n}\n\nexport default shuffle;","import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n    height: 150px;\n    display: flex;\n    justify-content: space-evenly;\n    flex-wrap: wrap;\n`\n\nconst Button = styled.button`\n    background: ${props => props.theme.bg};\n    color: ${props => props.theme.fg};\n    font-size: 20px;\n    font-style: italic;\n    font-weight: 400;\n    border: none;\n    border-bottom: ${props => props.theme.fg} solid 3px;\n    padding: 10px;\n    margin: 10px;\n    width: 120px;\n    flex: none;\n    display: flex;\n    justify-content: center;\n    :hover {\n        color: ${props => props.theme.main};\n        border-bottom: ${props => props.theme.main} solid 3px;\n        outline: 0;\n  }\n`;\n\n\n\nexport default class Options extends Component {\n    constructor(props) {\n        super(props)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleSubmit(value) {\n        this.props.onSubmit(value)\n    }\n\n    render() {\n        return (\n            <Container>\n                {this.props.options.map(\n                    (option) => <Button\n                        key={option}\n                        onClick={() => this.handleSubmit(option)}>{\n                            option}\n                    </Button>\n                )}\n            </Container>\n        )\n    }\n}","import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n    height: 150px;\n    display: flex;\n    justify-content: space-evenly;\n    flex-wrap: wrap;\n`\n\nconst Button = styled.button`\n  border: none;\n  border-bottom: black solid 3px;\n  padding: 10px;\n  margin: 10px;\n  width: 120px;\n  flex: none;\n  display: flex;\n  justify-content: center;\n  :hover {\n      color: ${props => props.theme.main};\n      border-bottom: ${props => props.theme.main} solid 3px;\n      outline: 0;\n  }\n  a {\n      text-decoration: none;\n      :visited{\n          color: black;\n      }\n      :hover {\n          color: ${props => props.theme.main};\n        }\n  }\n`;\n\nconst Info = styled.table`\n  width: 220px;\n  text-align: left;\n  margin-top: 15px;\n  tr {\n      margin: 5px;\n      padding: 5px;\n      td {\n          margin: 5px;\n          padding: 5px;\n      }\n      .centred {\n          text-align: center;\n          text-decoration: none;\n          font-style: italic;\n      }\n  }\n`;\n\nexport default class Results extends Component {\n    constructor(props) {\n        super(props)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleSubmit(value) {\n        this.props.onSubmit(value)\n    }\n\n\n    render() {\n        return (\n            <Container>\n                <Info>\n                    <tr>\n                        <td>\n                            <b>\n                                Correct Answer:\n                            </b>\n                        </td>\n                        <td className=\"centred\">\n                            {this.props.answer}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <b>\n                                Your Answer:\n        \n                            </b>\n                        </td>\n                        <td className=\"centred\">\n                            {this.props.results}\n                        </td>\n                    </tr>\n                </Info>\n                <Button onClick={this.handleSubmit}>Reset</Button>\n                <Button ><a href=\"https://www.google.com\">↪ Google</a></Button>\n            </Container>\n        )\n    }\n}\n\n\n","import React, { Component, Fragment } from 'react'\nimport styled, { createGlobalStyle, ThemeProvider } from 'styled-components'\nimport data from './lib/data.json'\nimport shuffle from './lib/shuffle'\nimport Options from './Options'\nimport Results from './Results'\n\nconst setTest = (data) => {\n  let choices = shuffle(data).slice(0, 4)\n  let question = choices[0]\n  let answers = shuffle(choices).map(choice => choice.answer)\n  return { question: question, answers: answers }\n}\n\nconst quiz = setTest(data)\n\n\nconst theme = {\n  bg: \"#fff\",\n  fg: \"rgb(10,10,10)\",\n  main: \"pink\"\n};\n\nconst invertTheme = ({ fg, bg }) => ({\n  fg: bg,\n  bg: fg,\n  main: \"pink\"\n});\n\nconst GlobalStyle = createGlobalStyle`\nbody {\n  margin: 0;\n  padding: 0;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n    sans-serif;\n  background: ${props => props.theme.main};\n}\n\nh1 {\n  font-size: 100px;\n  margin: 3rem;\n}\n`;\n\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 10px;\n`;\n\nconst Main = styled.div`\n  background-color: ${props => props.theme.bg};\n  color: ${props => props.theme.fg};\n  flex: none;\n  height: 350px;\n  width: 300px;\n  margin-top: 100px;\n  padding: 30px 0;\n  border: solid 1px ${props => props.theme.fg};\n  border-radius: 30px;\n  box-shadow: 3px 3px rgb(30,30,30);\n  text-align: center;\n`;\n\n\nconst Hana = styled.div`\n  position: absolute;\n  font-size: 60px;\n  margin: 0 30px;\n  transform: rotate(330deg);\n`;\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleReplaySubmit = this.handleReplaySubmit.bind(this)\n    this.state = {\n      test: quiz.question,\n      answers: quiz.answers,\n      response: \"\",\n      flipped: false\n    }\n  }\n\n  handleSubmit(value) {\n    this.setState({ answer: value, flipped: true })\n  }\n\n  handleReplaySubmit(e) {\n    let quiz = setTest(data)\n    this.setState({\n      test: quiz.question,\n      answers: quiz.answers,\n      response: \"\",\n      flipped: false\n    })\n  }\n\n  render() {\n    const flipped = this.state.flipped\n    return (\n      <Container>\n        <ThemeProvider theme={theme}>\n          <Fragment>\n            <GlobalStyle />\n            {!flipped\n              ? <ThemeProvider theme={theme}>\n                {/* theme={invertTheme} */}\n                <Main>\n                  <h1>{this.state.test.question}</h1>\n                  <Options options={this.state.answers} onSubmit={this.handleSubmit} />\n                </Main>\n              </ThemeProvider>\n              : <Main>\n                {(this.state.answer === this.state.test.answer) && <Hana><span role=\"img\" aria-label=\"white-flower\">💮</span></Hana>}\n                <h1>{this.state.test.question}</h1>\n                <Results answer={this.state.test.answer} results={this.state.answer} onSubmit={this.handleReplaySubmit} />\n              </Main>\n            }\n          </Fragment>\n        </ThemeProvider>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}